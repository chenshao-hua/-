1.最佳(Optimal)置换算法
1.1算法原理
   其选择淘汰的页面将是以后永不使用的,或许是在最长时间内不再被访问的页面.采用最佳置换算法
通常可以保证获得最低的缺页率.但由于人们目前还无法预知,一个进程在内存的若干个界面中,哪一个
页面是未来最长时间内不再被访问的,因而该算法是无法实现的,但可以利用它来评价其他算法.例如:
   假定系统为某进程分配了三个物理块,并考虑有以下页面号引用串:
   7,0,1,2,0,3,0,4,2,3,0,3,2,1,2,0,1,7,0,1
   进程在运行时,先将7,0,1三个页面依次装入内存.进程要访问页面2时,产生缺页中断,根据最佳置换算法,
选择第18次访问才需调入的页面7予以淘汰.然后,访问页面0时,因为已在内存中所以不必产生缺页中断.访
问页面3时,又根据最佳置换算法将页面1淘汰....依次类推.

2.先进先出(FIFO)置换算法
2.1算法原理
   是最简单的页面置换算法.这种算法的基本思想是:当需要淘汰一个页面时候,总是选择驻留主存时间最
长的页面进行淘汰,即先进入主存的页面先淘汰.其理由是:最早调入主存的页面不再被使用的可能性最大.
   根据上面的例子,采用FIFO算法进行页面置换.进程访问页面2时,把最早进入内存的页面7换出.然后访问
页面3时,再把2,0,1中最新页进入内存的页换出.

3.最近最久未使用(LRU)算法
3.1算法原理
   这种算法的基本思想是:利用局部性原理,根据一个作业在执行过程中过去的页面访问历史来推测未来的
行为.它认为过去一段时间里不曾被访问的页面,在最近的将来可能也不会再被访问.因此,这种算法的实质
是:当需要淘汰一个页面时,总是选择在最近的一段时间内最久不用的页面予以淘汰.
   根据上面的例子采用LRU算法进行页面置换.进程第一次对页面2访问时,将最近最久未被访问的页面7置
换出去.然后访问页面3时,将最近最久未使用的页面1换出.
